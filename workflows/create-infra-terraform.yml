# This workflow installs the latest version of Terraform CLI. 
# On pull request events, this workflow will run
# `terraform init`, `terraform fmt`, and `terraform plan` (speculative plan via Terraform Cloud). 
# On push events
# to the main branch, `terraform apply` will be executed.
# Documentation for `hashicorp/setup-terraform` is located here: https://github.com/hashicorp/setup-terraform

name: 'Create Infrastructure'

on:
  push:
    branches: none
    # - main
  pull_request:
    branches: none
    # - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    env:
      WORKING_DIRECTORY: infra

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: $WORKING_DIRECTORY

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
      working-directory: $WORKING_DIRECTORY
      
    # Validate all Terraform configuration files
    - name: Terraform Validate
      run: terraform validate
      working-directory: $WORKING_DIRECTORY

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      working-directory: $WORKING_DIRECTORY

      # On push to main, build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
      working-directory: $WORKING_DIRECTORY
